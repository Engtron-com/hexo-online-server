<!DOCTYPE html>
<html>

<head>
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>个人博客在线编辑</title>
  <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/css/bootstrap.min.css">
  <script src="https://cdn.bootcss.com/jquery/3.4.1/jquery.min.js"></script>
  <style>
    .output {
      display: block;
      width: 100%;
      height: 80%;
      border: 10px solid #F8F8F8;
      padding: 10px;
      line-height: 20px;
      overflow: auto;
      background-color: #3F3F3F;
      color: #eee;
      font-size: 12px;
      font-family: Courier New;
    }

    #container {
      height: 100%;
      width: 100%;
    }

    .top {
      margin: 10px;
    }

    .btn-toolbar {
      margin-left: 5px;
      margin-bottom: 5px;
    }

    .list-group-item {
      white-space: nowrap;
      overflow: hidden;
      text-overflow: ellipsis;
    }
    
    .navbar {
      background: #333333;
      box-shadow: 0 0 6px rgba(0,0,0,0.25);
      transition: background-color 500ms ease;
    }

    #navbar-collapse {
      width: 100%;
    }

    .navbar-nav {
      width: 94%;
    }
    .navbar-nav li {
      float: left;
    }

    .navbar-nav li:last-child {
      float: right;
    }
    .navbar-nav a:hover {
      background: none;
      color: #777777;
    }
    #canvas {
      width:100%; 
      height:100%;
      display:inline-block;
      vertical-align:baseline;
	  }
  </style>
</head>

<body>
  <nav class="navbar navbar-default" role="navigation">
    <div class="container-fluid">
      <div class="navbar-header">
        <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar-collapse">
          <span class="sr-only">切换导航</span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
          <span class="icon-bar"></span>
        </button>
        <a class="navbar-brand" href="#">个人博客</a>
      </div>
      <div class="collapse navbar-collapse" id="navbar-collapse">
        <ul class="nav navbar-nav">
          <!-- <li><a href="/hexo" pjax>Hexo</a></li> -->
          <li class="active"><a href="/post" pjax>博客文章</a></li>
          <li><a href="/page" pjax>博客</a></li>
          <li><a href="/logout">注销</a></li>
        </ul>
      </div>
    </div>
  </nav>
  <div id="container">
    <%- include(path); %>
  </div>
  <canvas id="canvas" width="1920" height="916"></canvas> 
  <script>
    if (location.pathname !== "/") {
      $("ul.nav li").removeClass("active");
      $('a[href="' + location.pathname + '"]').parent().addClass('active');
    }
    // let ws = new WebSocket('<%- ssl?"wss":"ws" %>://' + window.location.hostname + ':<%= wsPort %>');
    // ws.onopen = function (ev) {
    //   swal("WebSocket已连接");
    // };
    // ws.onmessage = function (ev) {
    //   var data = JSON.parse(ev.data);
    //   if (data.type === 'message') {
    //     swal("\n" + data.data);
    //   } else if (data.type === 'warning') {
    //     swal("\n" + data.data, 'warning');
    //   } else if (data.type === 'success') {
    //     swal("\n" + data.data, 'success');
    //   } else if (data.type === 'reload') {
    //     window.location.reload();
    //   } else if (data.type === 'error') {
    //     swal("\n执行出错，详情请查看控制台", "error");
    //     console.log(data.data);
    //   } else if (data.type === 'html') {
    //     $(data.el).html(data.data);
    //   }
    // };
    // ws.onclose = function (ev) {
    //   swal("\nWebSocket连接关闭");
    //   swal("\n正在重连WebSocket...");
    //   ws = new WebSocket('<%- ssl?"wss":"ws" %>://' + window.location.hostname + ':<%= wsPort %>');
    // };
    // ws.onerror = function (ev) {
    //   swal("\nWebSocket连接出错", "error");
    //   console.log(ev);
    // };
    $("a[pjax]").bind("click", function (e) {
      if (window.autoSave) clearInterval(window.autoSave);
      $("ul.nav li").removeClass("active");
      $(this).parent().addClass('active');
      let path = $(this).attr("href");
      $.get($(this).attr("href"), {
        pjax: true
      }, function (data, status, xhr) {
        if (status === "success") {
          window.history.pushState({
            status: 0
          }, '', path)
          $("#container").html(data);
        }
      });
      return false;
    });

    function swal(e, type = 'message') {
      if ($(".output").length > 0) {
        $(".output")[0].value += e;
        $(".output").scrollTop($(".output")[0].scrollHeight);
      } else {
        switch (type) {
          case "success":
            alertify.success(e);
            break;
          case "error":
          case "warning":
            alertify.error(e);
            break;
          case "message":
            alertify.log(e);
            break;
          default:
            alertify.log(e);
            break;
        }
      }
    }
  </script>
  <script>
      //宇宙特效
      "use strict";
      var canvas = document.getElementById('canvas'),
        ctx = canvas.getContext('2d'),
        w = canvas.width = window.innerWidth,
        h = canvas.height = window.innerHeight,
      
        hue = 217,
        stars = [],
        count = 0,
        maxStars = 2500;//星星数量
      
      var canvas2 = document.createElement('canvas'),
        ctx2 = canvas2.getContext('2d');
      canvas2.width = 100;
      canvas2.height = 100;
      var half = canvas2.width / 2,
        gradient2 = ctx2.createRadialGradient(half, half, 0, half, half, half);
      gradient2.addColorStop(0.025, '#CCC');
      gradient2.addColorStop(0.1, 'hsl(' + hue + ', 61%, 33%)');
      gradient2.addColorStop(0.25, 'hsl(' + hue + ', 64%, 6%)');
      gradient2.addColorStop(1, 'transparent');
      
      ctx2.fillStyle = gradient2;
      ctx2.beginPath();
      ctx2.arc(half, half, half, 0, Math.PI * 2);
      ctx2.fill();
      
      // End cache
      
      function random(min, max) {
        if (arguments.length < 2) {
          max = min;
          min = 0;
        }
      
        if (min > max) {
          var hold = max;
          max = min;
          min = hold;
        }
      
        return Math.floor(Math.random() * (max - min + 1)) + min;
      }
      
      function maxOrbit(x, y) {
        var max = Math.max(x, y),
          diameter = Math.round(Math.sqrt(max * max + max * max));
        return diameter / 2;
        //星星移动范围，值越大范围越小，
      }
      
      var Star = function() {
      
        this.orbitRadius = random(maxOrbit(w, h));
        this.radius = random(60, this.orbitRadius) / 18; 
        //星星大小
        this.orbitX = w / 2;
        this.orbitY = h / 2;
        this.timePassed = random(0, maxStars);
        this.speed = random(this.orbitRadius) / 500000; 
        //星星移动速度
        this.alpha = random(2, 10) / 10;
      
        count++;
        stars[count] = this;
      }
      
      Star.prototype.draw = function() {
        var x = Math.sin(this.timePassed) * this.orbitRadius + this.orbitX,
          y = Math.cos(this.timePassed) * this.orbitRadius + this.orbitY,
          twinkle = random(10);
      
        if (twinkle === 1 && this.alpha > 0) {
          this.alpha -= 0.05;
        } else if (twinkle === 2 && this.alpha < 1) {
          this.alpha += 0.05;
        }
      
        ctx.globalAlpha = this.alpha;
        ctx.drawImage(canvas2, x - this.radius / 2, y - this.radius / 2, this.radius, this.radius);
        this.timePassed += this.speed;
      }
      
      for (var i = 0; i < maxStars; i++) {
        new Star();
      }
      
      function animation() {
        ctx.globalCompositeOperation = 'source-over';
        ctx.globalAlpha = 0.5; //尾巴
        ctx.fillStyle = 'hsla(' + hue + ', 64%, 6%, 2)';
        ctx.fillRect(0, 0, w, h)
      
        ctx.globalCompositeOperation = 'lighter';
        for (var i = 1, l = stars.length; i < l; i++) {
          stars[i].draw();
        };
      
        window.requestAnimationFrame(animation);
      }
      animation();
    </script>
  <script src="https://cdn.jsdelivr.net/npm/bootstrap@3.3.7/dist/js/bootstrap.min.js"></script>
  <script src="https://cdn.rawgit.com/alertifyjs/alertify.js/v1.0.10/dist/js/alertify.js"></script>
</body>

</html>